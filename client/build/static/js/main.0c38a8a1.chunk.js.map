{"version":3,"sources":["components/PlaylistCard.js","pages/Landing.js","pages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","height","width","opacity","name","top","left","linear","color","buttonProgress","right","zIndex","PlaylistCard","playlist","idx","added","classes","useState","success","setSuccess","addedTimer","React","useRef","successTimer","useEffect","console","log","current","window","setTimeout","clearTimeout","succ","Box","className","src","images","url","Typography","CircularProgress","size","padding","background","minHeight","toast","marginBottom","info","createMuiTheme","palette","primary","main","secondary","withRouter","props","spotifyConnected","setSpotifyConnected","albumArt","artists","uri","nowPlaying","setNowPlaying","setMe","playlists","setPlaylists","open","setOpen","toastMsg","setToastMsg","spotify","SpotifyWebApi","getMeAsync","a","getMe","res","match","params","accessToken","refreshToken","setAccessToken","getUserPlaylists","getPlaylistsAsync","getCurrentSongCmd","getNowPlaying","np","instance","callProjectApi","value","error","result","alert","addSongToPlaylistCmd","i","getPlaylists","locPlaylists","playlistId","getPlaylistIdByIdx","playlistid","nowplaying","addTracksToPlaylist","newItems","items","counter","interval","setInterval","clearInterval","songName","playlistName","alanBtn","key","process","onCommand","command","number","wordsToNumbers","fuzzy","p","id","getMyCurrentPlaybackState","spotifySong","now","item","album","Container","maxWidth","variant","Collapse","in","Alert","action","Button","onClick","Grid","container","spacing","map","Slide","timeout","direction","xs","sm","md","backgroundColor","overflow","textAlign","display","alignItems","Login","style","margin","fontWeight","location","assign","PORT","App","history","useHistory","exact","path","component","Landing","Error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c38a8a1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Box, CircularProgress, Typography } from \"@material-ui/core\";\nimport \"./animation.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    height: \"100%\",\n    \"& img\": {\n      width: \"100%\",\n      opacity: \"20%\",\n    },\n  },\n  name: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    backgroundColor: \"#F4E4CC\",\n    color: \"#141414\",\n    width: \"100%\",\n    padding: \"10px\",\n    textAlign: \"center\",\n    fontWeight: 800,\n  },\n  linear: {\n    color: \"#F4E4CC\",\n  },\n  buttonProgress: {\n    color: \"#F4E4CC\",\n    position: \"absolute\",\n    top: \"-25px\",\n    right: \"-25px\",\n    zIndex: 100,\n  },\n}));\n\nconst PlaylistCard = ({ playlist, idx, added }) => {\n  const classes = useStyles();\n  const [success, setSuccess] = useState(false);\n  const addedTimer = React.useRef();\n  const successTimer = React.useRef();\n\n  useEffect(() => {\n    if (added) {\n      console.log(added);\n      addedTimer.current = window.setTimeout(() => {\n        setSuccess(true);\n      }, 3000);\n    }\n    return () => {\n      clearTimeout(addedTimer.current);\n    };\n  }, [added]);\n\n  useEffect(() => {\n    if (success) {\n      console.log({ succ: success });\n      successTimer.current = window.setTimeout(() => {\n        setSuccess(false);\n      }, 2000);\n    }\n\n    return () => {\n      clearTimeout(successTimer.current);\n    };\n  }, [success]);\n\n  const getClassName = () => {\n    if (success) {\n      return \"index added success\";\n    }\n    if (added) {\n      return \"index added\";\n    }\n\n    return \"index\";\n  };\n\n  return (\n    <div>\n      <Box className={classes.root}>\n        <img src={playlist.images[0].url} />\n        <Typography className={classes.name}>{playlist.name}</Typography>\n        {added && !success && <CircularProgress size={80} className={classes.buttonProgress} />}\n        <p className={getClassName()}>{success ? \"âœ“\" : idx}</p>\n      </Box>\n    </div>\n  );\n};\n\nexport default PlaylistCard;\n","import React, { useEffect, useState, createRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport wordsToNumbers from \"words-to-numbers\";\n\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\n\nimport \"../App.css\";\nimport { IconButton, Box, Button, Container, Grid, makeStyles, Typography, Collapse, Slide } from \"@material-ui/core\";\nimport PlaylistCard from \"../components/PlaylistCard\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0 1rem\",\n    background: \"#30333C\",\n    height: \"100%\",\n    minHeight: \"100vh\",\n  },\n\n  toast: {\n    marginBottom: \"4rem\",\n  },\n  info: {\n    padding: \"5rem 0\",\n    color: \"#F4E4CC\",\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#000\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n  },\n});\n\nconst Landing = (props) => {\n  const [spotifyConnected, setSpotifyConnected] = useState(false);\n  const [nowPlaying, setNowPlaying] = useState({ name: \"\", albumArt: \"\", artists: [], uri: \"\" });\n  const [me, setMe] = useState(null);\n  const [playlists, setPlaylists] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n\n  const classes = useStyles();\n\n  const spotify = new SpotifyWebApi();\n  useEffect(() => {\n    const getMeAsync = async () => {\n      try {\n        const res = await spotify.getMe();\n        setMe(res);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    const { accessToken, refreshToken } = props.match.params;\n\n    if (accessToken) {\n      spotify.setAccessToken(accessToken);\n      getMeAsync();\n      setSpotifyConnected(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    const getPlaylistsAsync = async () => {\n      try {\n        const res = await spotify.getUserPlaylists();\n        setPlaylists(res);\n      } catch (e) {\n        console.log(\"GET PLAYLISTSERROR: \", e);\n      }\n    };\n\n    if (spotifyConnected) {\n      getPlaylistsAsync();\n    }\n  }, [spotifyConnected]);\n\n  useEffect(() => {\n    const getCurrentSongCmd = async () => {\n      const np = await getNowPlaying();\n      instance.callProjectApi(\"setClientData\", { value: np }, function (error, result) {\n        if (error) {\n          alert(error);\n        }\n      });\n    };\n\n    const addSongToPlaylistCmd = async (i) => {\n      const locPlaylists = await getPlaylists();\n      const playlistId = getPlaylistIdByIdx(locPlaylists, i - 1);\n      const np = await getNowPlaying();\n\n      console.log({ playlistid: playlistId });\n      console.log({ nowplaying: np });\n      try {\n        const res = await spotify.addTracksToPlaylist(playlistId, [np.uri]);\n        const newItems = locPlaylists.items;\n        newItems[i - 1] = { ...newItems[i - 1], added: true };\n        setPlaylists({ ...playlists, items: newItems });\n\n        const max = 3;\n        let counter = 0;\n\n        const interval = setInterval(() => {\n          counter++;\n          if (counter > max) {\n            newItems[i - 1] = { ...newItems[i - 1], added: false };\n            setPlaylists({ ...playlists, items: newItems });\n            clearInterval(interval);\n            setToastMsg(`Added ${np.name} to ${locPlaylists.items[i - 1].name}!`);\n            setOpen(true);\n          }\n        }, 1000);\n      } catch (e) {\n        console.log(e);\n      }\n\n      instance.callProjectApi(\n        \"setPlaylistName\",\n        { value: { songName: np.name, playlistName: locPlaylists.items[i - 1].name } },\n        function (error, result) {\n          if (error) {\n            alert(error);\n          }\n        }\n      );\n    };\n\n    const instance = alanBtn({\n      key: process.env.REACT_APP_ALAN_KEY,\n      onCommand: ({ command, number }) => {\n        switch (command) {\n          case \"getNowPlaying\": {\n            getCurrentSongCmd();\n            break;\n          }\n          case \"addToPlaylist\": {\n            if (typeof number === \"string\") {\n              number = wordsToNumbers(number, { fuzzy: true });\n            }\n            addSongToPlaylistCmd(number);\n            break;\n          }\n        }\n      },\n    });\n  }, []);\n\n  const getPlaylists = async () => {\n    try {\n      const res = await spotify.getUserPlaylists();\n      return res;\n    } catch (e) {\n      return { error: e };\n    }\n  };\n\n  const getPlaylistIdByIdx = (p, idx) => {\n    return p.items[idx].id;\n  };\n\n  const getNowPlaying = async () => {\n    try {\n      const res = await spotify.getMyCurrentPlaybackState();\n      console.log({ spotifySong: res });\n      const now = { name: res.item.name, artists: res.item.artists, uri: res.item.uri };\n      setNowPlaying({\n        ...nowPlaying,\n        name: res.item.name,\n        albumArt: res.item.album.images[0].url,\n        artists: res.item.artists,\n        uri: res.item.uri,\n      });\n      return now;\n    } catch (e) {\n      console.log(e);\n      return e;\n    }\n  };\n\n  if (!playlists) {\n    <div>Loading...</div>;\n  }\n\n  const setSpecificAdded = async () => {\n    const newItems = playlists.items;\n    newItems[10] = { ...newItems[10], added: true };\n    setPlaylists({ ...playlists, items: newItems });\n    const max = 3;\n    let counter = 0;\n\n    const interval = setInterval(() => {\n      counter++;\n      if (counter > max) {\n        newItems[10] = { ...newItems[10], added: false };\n        setPlaylists({ ...playlists, items: newItems });\n        clearInterval(interval);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div className={classes.root}>\n      <MuiThemeProvider theme={theme}>\n        <Container maxWidth=\"lg\">\n          <Box className={classes.info}>\n            <Typography variant=\"h1\">Alanify</Typography>\n          </Box>\n          <Collapse in={open}>\n            <Alert className={classes.toast} action={<Button onClick={() => setOpen(false)}>Close</Button>}>\n              {toastMsg}\n            </Alert>\n          </Collapse>\n          {playlists && (\n            <Grid container spacing={6}>\n              {playlists.items.map((playlist, i) => (\n                <Slide key={playlist.id} in={true} timeout={i * 200} direction=\"right\">\n                  <Grid item xs={12} sm={6} md={3}>\n                    <PlaylistCard playlist={playlist} idx={i + 1} added={playlist.added} />\n                  </Grid>\n                </Slide>\n              ))}\n            </Grid>\n          )}\n        </Container>\n      </MuiThemeProvider>\n    </div>\n  );\n};\n\nexport default withRouter(Landing);\n","import { Box, Button, Container, makeStyles } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    backgroundColor: \"#30333c\",\n    width: \"100vw\",\n    height: \"100vh\",\n    overflow: \"hidden\",\n    textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Login = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Container maxWidth=\"lg\">\n        <Button\n          style={{\n            margin: \"0 auto\",\n            backgroundColor: \"#f4e4cc\",\n            fontWeight: 800,\n            color: \"#30333c\",\n          }}\n          variant=\"contained\"\n          color=\"#f4e4cc\"\n          onClick={() => window.location.assign(`https://alanify.herokuaoo.com:${process.env.PORT}/login`)}\n        >\n          Continue with Spotify\n        </Button>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, useHistory } from \"react-router-dom\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport \"./App.css\";\nimport Landing from \"./pages/Landing\";\nimport Login from \"./pages/Login\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#000\",\n    },\n    secondary: {\n      main: \"#fff\",\n    },\n  },\n});\n\nconst App = () => {\n  const history = useHistory();\n  return (\n    <BrowserRouter history={history}>\n      <Route exact path=\"/\" component={Login} />\n      <Route path=\"/user/:accessToken/:refreshToken\" component={Landing} />\n      <Route path=\"/error/:errorMsg\" component={Error} />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}